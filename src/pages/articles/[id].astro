---
import { getCollection, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const articles = await getCollection("articles");
  return articles.map((article) => ({
    params: { id: article.id },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content } = await render(article);
---

<Layout>
  <div class="container">
    <div class="article">
      <img
        alt=""
        class="cover-image"
        id="cover-image"
        src={article.data.coverImage}
        transition:name={`cover-image-${article.id}`}
      />
      <h1>{article.data.title}</h1>
      <Content />
    </div>
  </div>
</Layout>

<script>
  function setupImageTransition() {
    const coverImage = document.querySelector("#cover-image");
    if (!coverImage) return;

    const initialScope = coverImage.getAttribute("data-astro-transition-scope");
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting && initialScope) {
            coverImage.setAttribute("data-astro-transition-scope", initialScope);
          } else {
            coverImage.removeAttribute("data-astro-transition-scope");
          }
        });
      },
      {
        threshold: 0.1,
      },
    );

    observer.observe(coverImage);
  }

  document.addEventListener("astro:page-load", setupImageTransition);
</script>

<style>
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    background-color: #f0f0f0;
    padding: 2rem;
  }

  .article {
    background-color: #fff;
    border-radius: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: min(100%, 50rem);
    padding: 2rem;
    img {
      max-width: 100%;
    }
    pre {
      padding: 1em;
    }
    ul,
    ol {
      padding-left: 1em;
    }
  }

  .cover-image {
    border-radius: 0.5rem;
  }
</style>
